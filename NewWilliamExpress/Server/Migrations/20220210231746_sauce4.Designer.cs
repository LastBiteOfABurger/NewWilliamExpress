// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NewWilliamExpress.Server.Data;

namespace NewWilliamExpress.Server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220210231746_sauce4")]
    partial class sauce4
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("IdentityServer4.EntityFramework.Entities.DeviceFlowCodes", b =>
                {
                    b.Property<string>("UserCode")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasMaxLength(50000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DeviceCode")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("Expiration")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("SessionId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SubjectId")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("UserCode");

                    b.HasIndex("DeviceCode")
                        .IsUnique();

                    b.HasIndex("Expiration");

                    b.ToTable("DeviceCodes");
                });

            modelBuilder.Entity("IdentityServer4.EntityFramework.Entities.PersistedGrant", b =>
                {
                    b.Property<string>("Key")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("ConsumedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasMaxLength(50000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("Expiration")
                        .HasColumnType("datetime2");

                    b.Property<string>("SessionId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SubjectId")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Key");

                    b.HasIndex("Expiration");

                    b.HasIndex("SubjectId", "ClientId", "Type");

                    b.HasIndex("SubjectId", "SessionId", "Type");

                    b.ToTable("PersistedGrants");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("NewWilliamExpress.Server.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("WilliamExpress.Shared.Domain.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Brand");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2022, 2, 11, 7, 17, 46, 123, DateTimeKind.Local).AddTicks(1259),
                            DateUpdated = new DateTime(2022, 2, 11, 7, 17, 46, 123, DateTimeKind.Local).AddTicks(9439),
                            Name = "Uniqlo",
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2022, 2, 11, 7, 17, 46, 124, DateTimeKind.Local).AddTicks(17),
                            DateUpdated = new DateTime(2022, 2, 11, 7, 17, 46, 124, DateTimeKind.Local).AddTicks(20),
                            Name = "CottonOn",
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2022, 2, 11, 7, 17, 46, 124, DateTimeKind.Local).AddTicks(22),
                            DateUpdated = new DateTime(2022, 2, 11, 7, 17, 46, 124, DateTimeKind.Local).AddTicks(23),
                            Name = "Zara",
                            UpdatedBy = "System"
                        });
                });

            modelBuilder.Entity("WilliamExpress.Shared.Domain.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContactNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rating")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Customer");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ContactNumber = "90909090",
                            CreatedBy = "System",
                            DateCreated = new DateTime(2022, 2, 11, 7, 17, 46, 125, DateTimeKind.Local).AddTicks(2748),
                            DateUpdated = new DateTime(2022, 2, 11, 7, 17, 46, 125, DateTimeKind.Local).AddTicks(2759),
                            EmailAddress = "Joe@gmail.com",
                            Password = "Joe1",
                            Rating = "3",
                            UpdatedBy = "System",
                            Username = "Joe"
                        },
                        new
                        {
                            Id = 2,
                            ContactNumber = "80808080",
                            CreatedBy = "System",
                            DateCreated = new DateTime(2022, 2, 11, 7, 17, 46, 125, DateTimeKind.Local).AddTicks(2763),
                            DateUpdated = new DateTime(2022, 2, 11, 7, 17, 46, 125, DateTimeKind.Local).AddTicks(2764),
                            EmailAddress = "Dan@gmail.com",
                            Password = "Dan1",
                            Rating = "4",
                            UpdatedBy = "System",
                            Username = "Dan"
                        },
                        new
                        {
                            Id = 3,
                            ContactNumber = "81818181",
                            CreatedBy = "System",
                            DateCreated = new DateTime(2022, 2, 11, 7, 17, 46, 125, DateTimeKind.Local).AddTicks(2766),
                            DateUpdated = new DateTime(2022, 2, 11, 7, 17, 46, 125, DateTimeKind.Local).AddTicks(2767),
                            EmailAddress = "Sally@gmail.com",
                            Password = "Sally1",
                            Rating = "5",
                            UpdatedBy = "System",
                            Username = "Sally"
                        });
                });

            modelBuilder.Entity("WilliamExpress.Shared.Domain.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Itemname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ItemtypeId")
                        .HasColumnType("int");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Wear")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ItemtypeId");

                    b.HasIndex("OrderId");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandId = 1,
                            CreatedBy = "System",
                            CustomerId = 2,
                            DateCreated = new DateTime(2022, 2, 11, 7, 17, 46, 126, DateTimeKind.Local).AddTicks(8180),
                            DateUpdated = new DateTime(2022, 2, 11, 7, 17, 46, 126, DateTimeKind.Local).AddTicks(8192),
                            Description = "very nice please buy",
                            Image = "https://localhost:44376/StaticFiles/Images/shorts1.jfif",
                            Itemname = "Shorts denim pants medium",
                            ItemtypeId = 3,
                            Price = 200.0,
                            Quantity = 35,
                            UpdatedBy = "System",
                            Wear = "new"
                        },
                        new
                        {
                            Id = 2,
                            BrandId = 1,
                            CreatedBy = "System",
                            CustomerId = 1,
                            DateCreated = new DateTime(2022, 2, 11, 7, 17, 46, 126, DateTimeKind.Local).AddTicks(8197),
                            DateUpdated = new DateTime(2022, 2, 11, 7, 17, 46, 126, DateTimeKind.Local).AddTicks(8198),
                            Description = "Best quality",
                            Image = "https://localhost:44376/StaticFiles/Images/jean1.png",
                            Itemname = "long denium jeans large",
                            ItemtypeId = 3,
                            Price = 300.0,
                            Quantity = 35,
                            UpdatedBy = "System",
                            Wear = "new"
                        },
                        new
                        {
                            Id = 3,
                            BrandId = 1,
                            CreatedBy = "System",
                            CustomerId = 3,
                            DateCreated = new DateTime(2022, 2, 11, 7, 17, 46, 126, DateTimeKind.Local).AddTicks(8200),
                            DateUpdated = new DateTime(2022, 2, 11, 7, 17, 46, 126, DateTimeKind.Local).AddTicks(8202),
                            Description = "very good",
                            Image = "https://localhost:44376/StaticFiles/Images/tshirt1.jpg",
                            Itemname = "TShirt Small",
                            ItemtypeId = 3,
                            Price = 250.0,
                            Quantity = 35,
                            UpdatedBy = "System",
                            Wear = "new"
                        },
                        new
                        {
                            Id = 4,
                            BrandId = 1,
                            CreatedBy = "System",
                            CustomerId = 1,
                            DateCreated = new DateTime(2022, 2, 11, 7, 17, 46, 126, DateTimeKind.Local).AddTicks(8204),
                            DateUpdated = new DateTime(2022, 2, 11, 7, 17, 46, 126, DateTimeKind.Local).AddTicks(8205),
                            Description = "give me money",
                            Image = "https://localhost:44376/StaticFiles/Images/polot1.png",
                            Itemname = "long sleeve Polo T",
                            ItemtypeId = 3,
                            Price = 400.0,
                            Quantity = 35,
                            UpdatedBy = "System",
                            Wear = "new"
                        },
                        new
                        {
                            Id = 5,
                            BrandId = 1,
                            CreatedBy = "System",
                            CustomerId = 3,
                            DateCreated = new DateTime(2022, 2, 11, 7, 17, 46, 126, DateTimeKind.Local).AddTicks(8208),
                            DateUpdated = new DateTime(2022, 2, 11, 7, 17, 46, 126, DateTimeKind.Local).AddTicks(8209),
                            Description = "need to feed family",
                            Image = "https://localhost:44376/StaticFiles/Images/longs1jpg.jpg",
                            Itemname = "long sleeve Tshirt",
                            ItemtypeId = 3,
                            Price = 200.0,
                            Quantity = 35,
                            UpdatedBy = "System",
                            Wear = "new"
                        },
                        new
                        {
                            Id = 6,
                            BrandId = 1,
                            CreatedBy = "System",
                            CustomerId = 1,
                            DateCreated = new DateTime(2022, 2, 11, 7, 17, 46, 126, DateTimeKind.Local).AddTicks(8211),
                            DateUpdated = new DateTime(2022, 2, 11, 7, 17, 46, 126, DateTimeKind.Local).AddTicks(8212),
                            Description = "very nice please buy",
                            Image = "https://localhost:44376/StaticFiles/Images/shorts1.jfif",
                            Itemname = "Shorts denim pants medium",
                            ItemtypeId = 3,
                            Price = 200.0,
                            Quantity = 35,
                            UpdatedBy = "System",
                            Wear = "new"
                        },
                        new
                        {
                            Id = 7,
                            BrandId = 1,
                            CreatedBy = "System",
                            CustomerId = 2,
                            DateCreated = new DateTime(2022, 2, 11, 7, 17, 46, 126, DateTimeKind.Local).AddTicks(8215),
                            DateUpdated = new DateTime(2022, 2, 11, 7, 17, 46, 126, DateTimeKind.Local).AddTicks(8216),
                            Description = "Best quality",
                            Image = "https://localhost:44376/StaticFiles/Images/jean2.jpg",
                            Itemname = "long denium jeans large",
                            ItemtypeId = 3,
                            Price = 300.0,
                            Quantity = 35,
                            UpdatedBy = "System",
                            Wear = "new"
                        },
                        new
                        {
                            Id = 8,
                            BrandId = 1,
                            CreatedBy = "System",
                            CustomerId = 2,
                            DateCreated = new DateTime(2022, 2, 11, 7, 17, 46, 126, DateTimeKind.Local).AddTicks(8218),
                            DateUpdated = new DateTime(2022, 2, 11, 7, 17, 46, 126, DateTimeKind.Local).AddTicks(8219),
                            Description = "very good",
                            Image = "https://localhost:44376/StaticFiles/Images/tshirt2.jpg",
                            Itemname = "TShirt Small",
                            ItemtypeId = 3,
                            Price = 250.0,
                            Quantity = 35,
                            UpdatedBy = "System",
                            Wear = "new"
                        },
                        new
                        {
                            Id = 9,
                            BrandId = 1,
                            CreatedBy = "System",
                            CustomerId = 2,
                            DateCreated = new DateTime(2022, 2, 11, 7, 17, 46, 126, DateTimeKind.Local).AddTicks(8222),
                            DateUpdated = new DateTime(2022, 2, 11, 7, 17, 46, 126, DateTimeKind.Local).AddTicks(8223),
                            Description = "give me money",
                            Image = "https://localhost:44376/StaticFiles/Images/polot2.jpg",
                            Itemname = "long sleeve Polo T",
                            ItemtypeId = 3,
                            Price = 400.0,
                            Quantity = 35,
                            UpdatedBy = "System",
                            Wear = "new"
                        },
                        new
                        {
                            Id = 10,
                            BrandId = 1,
                            CreatedBy = "System",
                            CustomerId = 1,
                            DateCreated = new DateTime(2022, 2, 11, 7, 17, 46, 126, DateTimeKind.Local).AddTicks(8225),
                            DateUpdated = new DateTime(2022, 2, 11, 7, 17, 46, 126, DateTimeKind.Local).AddTicks(8226),
                            Description = "need to feed family",
                            Image = "https://localhost:44376/StaticFiles/Images/longs2.jpg",
                            Itemname = "long sleeve Tshirt",
                            ItemtypeId = 3,
                            Price = 200.0,
                            Quantity = 35,
                            UpdatedBy = "System",
                            Wear = "new"
                        },
                        new
                        {
                            Id = 11,
                            BrandId = 1,
                            CreatedBy = "System",
                            CustomerId = 3,
                            DateCreated = new DateTime(2022, 2, 11, 7, 17, 46, 126, DateTimeKind.Local).AddTicks(8228),
                            DateUpdated = new DateTime(2022, 2, 11, 7, 17, 46, 126, DateTimeKind.Local).AddTicks(8229),
                            Description = "very nice please buy",
                            Image = "https://localhost:44376/StaticFiles/Images/polot3.jpg",
                            Itemname = "Shorts denim pants medium",
                            ItemtypeId = 3,
                            Price = 200.0,
                            Quantity = 35,
                            UpdatedBy = "System",
                            Wear = "new"
                        },
                        new
                        {
                            Id = 12,
                            BrandId = 1,
                            CreatedBy = "System",
                            CustomerId = 1,
                            DateCreated = new DateTime(2022, 2, 11, 7, 17, 46, 126, DateTimeKind.Local).AddTicks(8232),
                            DateUpdated = new DateTime(2022, 2, 11, 7, 17, 46, 126, DateTimeKind.Local).AddTicks(8233),
                            Description = "Best quality",
                            Image = "https://localhost:44376/StaticFiles/Images/jean3.jpg",
                            Itemname = "long denium jeans large",
                            ItemtypeId = 3,
                            Price = 300.0,
                            Quantity = 35,
                            UpdatedBy = "System",
                            Wear = "new"
                        },
                        new
                        {
                            Id = 13,
                            BrandId = 1,
                            CreatedBy = "System",
                            CustomerId = 3,
                            DateCreated = new DateTime(2022, 2, 11, 7, 17, 46, 126, DateTimeKind.Local).AddTicks(8235),
                            DateUpdated = new DateTime(2022, 2, 11, 7, 17, 46, 126, DateTimeKind.Local).AddTicks(8236),
                            Description = "very good",
                            Image = "https://localhost:44376/StaticFiles/Images/tshirt3.jpg",
                            Itemname = "TShirt Small",
                            ItemtypeId = 3,
                            Price = 250.0,
                            Quantity = 35,
                            UpdatedBy = "System",
                            Wear = "new"
                        },
                        new
                        {
                            Id = 14,
                            BrandId = 1,
                            CreatedBy = "System",
                            CustomerId = 1,
                            DateCreated = new DateTime(2022, 2, 11, 7, 17, 46, 126, DateTimeKind.Local).AddTicks(8239),
                            DateUpdated = new DateTime(2022, 2, 11, 7, 17, 46, 126, DateTimeKind.Local).AddTicks(8240),
                            Description = "give me money",
                            Image = "https://localhost:44376/StaticFiles/Images/polot3.jpg",
                            Itemname = "long sleeve Polo T",
                            ItemtypeId = 3,
                            Price = 400.0,
                            Quantity = 35,
                            UpdatedBy = "System",
                            Wear = "new"
                        },
                        new
                        {
                            Id = 15,
                            BrandId = 1,
                            CreatedBy = "System",
                            CustomerId = 3,
                            DateCreated = new DateTime(2022, 2, 11, 7, 17, 46, 126, DateTimeKind.Local).AddTicks(8242),
                            DateUpdated = new DateTime(2022, 2, 11, 7, 17, 46, 126, DateTimeKind.Local).AddTicks(8243),
                            Description = "need to feed family",
                            Image = "https://localhost:44376/StaticFiles/Images/longs3.webp",
                            Itemname = "long sleeve Tshirt",
                            ItemtypeId = 3,
                            Price = 200.0,
                            Quantity = 35,
                            UpdatedBy = "System",
                            Wear = "new"
                        },
                        new
                        {
                            Id = 16,
                            BrandId = 1,
                            CreatedBy = "System",
                            CustomerId = 2,
                            DateCreated = new DateTime(2022, 2, 11, 7, 17, 46, 126, DateTimeKind.Local).AddTicks(8245),
                            DateUpdated = new DateTime(2022, 2, 11, 7, 17, 46, 126, DateTimeKind.Local).AddTicks(8246),
                            Description = "very nice please buy",
                            Image = "https://localhost:44376/StaticFiles/Images/shorts4.jfif",
                            Itemname = "Shorts denim pants medium",
                            ItemtypeId = 3,
                            Price = 200.0,
                            Quantity = 35,
                            UpdatedBy = "System",
                            Wear = "new"
                        },
                        new
                        {
                            Id = 17,
                            BrandId = 1,
                            CreatedBy = "System",
                            CustomerId = 1,
                            DateCreated = new DateTime(2022, 2, 11, 7, 17, 46, 126, DateTimeKind.Local).AddTicks(8249),
                            DateUpdated = new DateTime(2022, 2, 11, 7, 17, 46, 126, DateTimeKind.Local).AddTicks(8250),
                            Description = "Best quality",
                            Image = "https://localhost:44376/StaticFiles/Images/jean4.png",
                            Itemname = "long denium jeans large",
                            ItemtypeId = 3,
                            Price = 300.0,
                            Quantity = 35,
                            UpdatedBy = "System",
                            Wear = "new"
                        },
                        new
                        {
                            Id = 18,
                            BrandId = 1,
                            CreatedBy = "System",
                            CustomerId = 3,
                            DateCreated = new DateTime(2022, 2, 11, 7, 17, 46, 126, DateTimeKind.Local).AddTicks(8252),
                            DateUpdated = new DateTime(2022, 2, 11, 7, 17, 46, 126, DateTimeKind.Local).AddTicks(8253),
                            Description = "very good",
                            Image = "https://localhost:44376/StaticFiles/Images/tshirt4.jpg",
                            Itemname = "TShirt Small",
                            ItemtypeId = 3,
                            Price = 250.0,
                            Quantity = 35,
                            UpdatedBy = "System",
                            Wear = "new"
                        },
                        new
                        {
                            Id = 19,
                            BrandId = 1,
                            CreatedBy = "System",
                            CustomerId = 1,
                            DateCreated = new DateTime(2022, 2, 11, 7, 17, 46, 126, DateTimeKind.Local).AddTicks(8256),
                            DateUpdated = new DateTime(2022, 2, 11, 7, 17, 46, 126, DateTimeKind.Local).AddTicks(8257),
                            Description = "give me money",
                            Image = "https://localhost:44376/StaticFiles/Images/polot4.jpg",
                            Itemname = "long sleeve Polo T",
                            ItemtypeId = 3,
                            Price = 400.0,
                            Quantity = 35,
                            UpdatedBy = "System",
                            Wear = "new"
                        },
                        new
                        {
                            Id = 20,
                            BrandId = 1,
                            CreatedBy = "System",
                            CustomerId = 2,
                            DateCreated = new DateTime(2022, 2, 11, 7, 17, 46, 126, DateTimeKind.Local).AddTicks(8259),
                            DateUpdated = new DateTime(2022, 2, 11, 7, 17, 46, 126, DateTimeKind.Local).AddTicks(8260),
                            Description = "need to feed family",
                            Image = "https://localhost:44376/StaticFiles/Images/longs4.jfif",
                            Itemname = "long sleeve Tshirt",
                            ItemtypeId = 3,
                            Price = 200.0,
                            Quantity = 35,
                            UpdatedBy = "System",
                            Wear = "new"
                        });
                });

            modelBuilder.Entity("WilliamExpress.Shared.Domain.Itemtype", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Itemtype");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Short pants denim"
                        },
                        new
                        {
                            Id = 2,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "long jeans denim"
                        },
                        new
                        {
                            Id = 3,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Short sleeve polo"
                        },
                        new
                        {
                            Id = 4,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "long sleeve polo"
                        },
                        new
                        {
                            Id = 5,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Tshirt"
                        });
                });

            modelBuilder.Entity("WilliamExpress.Shared.Domain.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("ShippingaddressId")
                        .HasColumnType("int");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("ShippingaddressId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("WilliamExpress.Shared.Domain.Shippingaddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Apartment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Shippingaddress");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Pasir ris",
                            Apartment = "HDB",
                            City = "Singapore",
                            Country = "Singapore",
                            CreatedBy = "System",
                            DateCreated = new DateTime(2022, 2, 11, 7, 17, 46, 127, DateTimeKind.Local).AddTicks(5307),
                            DateUpdated = new DateTime(2022, 2, 11, 7, 17, 46, 127, DateTimeKind.Local).AddTicks(5317),
                            FirstName = "Joe",
                            LastName = "Lim",
                            PhoneNumber = "989898989",
                            PostalCode = "342",
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Bedok st",
                            Apartment = "HDB",
                            City = "Singapore",
                            Country = "Singapore",
                            CreatedBy = "System",
                            DateCreated = new DateTime(2022, 2, 11, 7, 17, 46, 127, DateTimeKind.Local).AddTicks(5321),
                            DateUpdated = new DateTime(2022, 2, 11, 7, 17, 46, 127, DateTimeKind.Local).AddTicks(5322),
                            FirstName = "Joe",
                            LastName = "Mama",
                            PhoneNumber = "989898989",
                            PostalCode = "342",
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Tampines",
                            Apartment = "HDB",
                            City = "Singapore",
                            Country = "Singapore",
                            CreatedBy = "System",
                            DateCreated = new DateTime(2022, 2, 11, 7, 17, 46, 127, DateTimeKind.Local).AddTicks(5324),
                            DateUpdated = new DateTime(2022, 2, 11, 7, 17, 46, 127, DateTimeKind.Local).AddTicks(5325),
                            FirstName = "Joe",
                            LastName = "Dad",
                            PhoneNumber = "989898989",
                            PostalCode = "342",
                            UpdatedBy = "System"
                        });
                });

            modelBuilder.Entity("WilliamExpress.Shared.Domain.Staff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("StaffEmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StaffName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Staffpassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Staffs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2022, 2, 11, 7, 17, 46, 127, DateTimeKind.Local).AddTicks(7684),
                            DateUpdated = new DateTime(2022, 2, 11, 7, 17, 46, 127, DateTimeKind.Local).AddTicks(7690),
                            StaffName = "Danniel",
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2022, 2, 11, 7, 17, 46, 127, DateTimeKind.Local).AddTicks(7692),
                            DateUpdated = new DateTime(2022, 2, 11, 7, 17, 46, 127, DateTimeKind.Local).AddTicks(7694),
                            StaffName = "William",
                            UpdatedBy = "System"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("NewWilliamExpress.Server.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("NewWilliamExpress.Server.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewWilliamExpress.Server.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("NewWilliamExpress.Server.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WilliamExpress.Shared.Domain.Item", b =>
                {
                    b.HasOne("WilliamExpress.Shared.Domain.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WilliamExpress.Shared.Domain.Customer", "Customer")
                        .WithMany("Items")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WilliamExpress.Shared.Domain.Itemtype", "Itemtype")
                        .WithMany()
                        .HasForeignKey("ItemtypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WilliamExpress.Shared.Domain.Order", null)
                        .WithMany("Items")
                        .HasForeignKey("OrderId");

                    b.Navigation("Brand");

                    b.Navigation("Customer");

                    b.Navigation("Itemtype");
                });

            modelBuilder.Entity("WilliamExpress.Shared.Domain.Order", b =>
                {
                    b.HasOne("WilliamExpress.Shared.Domain.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WilliamExpress.Shared.Domain.Shippingaddress", "Shippingaddress")
                        .WithMany()
                        .HasForeignKey("ShippingaddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Shippingaddress");
                });

            modelBuilder.Entity("WilliamExpress.Shared.Domain.Customer", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("WilliamExpress.Shared.Domain.Order", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
